// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using fyle_backend.Models;

namespace fyle_backend.Migrations
{
    [DbContext(typeof(postgresContext))]
    partial class postgresContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:PostgresExtension:adminpack", ",,")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("fyle_backend.Models.BankBranches", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasColumnType("character varying(195)")
                        .HasMaxLength(195);

                    b.Property<long?>("BankId")
                        .HasColumnName("bank_id")
                        .HasColumnType("bigint");

                    b.Property<string>("BankName")
                        .HasColumnName("bank_name")
                        .HasColumnType("character varying(49)")
                        .HasMaxLength(49);

                    b.Property<string>("Branch")
                        .HasColumnName("branch")
                        .HasColumnType("character varying(74)")
                        .HasMaxLength(74);

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("District")
                        .HasColumnName("district")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Ifsc")
                        .HasColumnName("ifsc")
                        .HasColumnType("character varying(11)")
                        .HasMaxLength(11);

                    b.Property<string>("State")
                        .HasColumnName("state")
                        .HasColumnType("character varying(26)")
                        .HasMaxLength(26);

                    b.ToTable("bank_branches");
                });

            modelBuilder.Entity("fyle_backend.Models.Banks", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("character varying(49)")
                        .HasMaxLength(49);

                    b.HasKey("Id");

                    b.ToTable("banks");
                });

            modelBuilder.Entity("fyle_backend.Models.Branches", b =>
                {
                    b.Property<string>("Ifsc")
                        .HasColumnName("ifsc")
                        .HasColumnType("character varying(11)")
                        .HasMaxLength(11);

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasColumnType("character varying(195)")
                        .HasMaxLength(195);

                    b.Property<long?>("BankId")
                        .HasColumnName("bank_id")
                        .HasColumnType("bigint");

                    b.Property<string>("Branch")
                        .HasColumnName("branch")
                        .HasColumnType("character varying(74)")
                        .HasMaxLength(74);

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("District")
                        .HasColumnName("district")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("State")
                        .HasColumnName("state")
                        .HasColumnType("character varying(26)")
                        .HasMaxLength(26);

                    b.HasKey("Ifsc")
                        .HasName("branches_ifsc_pkey");

                    b.HasIndex("BankId");

                    b.ToTable("branches");
                });

            modelBuilder.Entity("fyle_backend.Models.Branches", b =>
                {
                    b.HasOne("fyle_backend.Models.Banks", "Bank")
                        .WithMany("Branches")
                        .HasForeignKey("BankId")
                        .HasConstraintName("branches_banks_fkey");
                });
#pragma warning restore 612, 618
        }
    }
}
